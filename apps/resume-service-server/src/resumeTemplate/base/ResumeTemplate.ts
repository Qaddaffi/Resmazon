/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  IsDate,
  MaxLength,
  IsOptional,
  IsEnum,
  IsBoolean,
  IsNumber,
  Min,
  Max,
  ValidateNested,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumResumeTemplateIndustry } from "./EnumResumeTemplateIndustry";
import { EnumResumeTemplateProfession } from "./EnumResumeTemplateProfession";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Comment } from "../../comment/base/Comment";
import { Like } from "../../like/base/Like";
import { PurchaseHistory } from "../../purchaseHistory/base/PurchaseHistory";

@ObjectType()
class ResumeTemplate {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumResumeTemplateIndustry,
    isArray: true,
  })
  @IsEnum(EnumResumeTemplateIndustry, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumResumeTemplateIndustry], {
    nullable: true,
  })
  industry?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumResumeTemplateProfession,
    isArray: true,
  })
  @IsEnum(EnumResumeTemplateProfession, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumResumeTemplateProfession], {
    nullable: true,
  })
  profession?: Array<"Option1">;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  fileWord!: JsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  filePdf!: JsonValue;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  freeDownload!: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Comment],
  })
  @ValidateNested()
  @Type(() => Comment)
  @IsOptional()
  comments?: Array<Comment>;

  @ApiProperty({
    required: false,
    type: () => [Like],
  })
  @ValidateNested()
  @Type(() => Like)
  @IsOptional()
  likes?: Array<Like>;

  @ApiProperty({
    required: false,
    type: () => [PurchaseHistory],
  })
  @ValidateNested()
  @Type(() => PurchaseHistory)
  @IsOptional()
  purchaseHistories?: Array<PurchaseHistory>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  author!: string | null;
}

export { ResumeTemplate as ResumeTemplate };
