/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsEnum,
  IsBoolean,
  IsNumber,
  Min,
  Max,
  ValidateNested,
} from "class-validator";

import { EnumResumeTemplateIndustry } from "./EnumResumeTemplateIndustry";
import { EnumResumeTemplateProfession } from "./EnumResumeTemplateProfession";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { CommentCreateNestedManyWithoutResumeTemplatesInput } from "./CommentCreateNestedManyWithoutResumeTemplatesInput";
import { Type } from "class-transformer";
import { LikeCreateNestedManyWithoutResumeTemplatesInput } from "./LikeCreateNestedManyWithoutResumeTemplatesInput";
import { PurchaseHistoryCreateNestedManyWithoutResumeTemplatesInput } from "./PurchaseHistoryCreateNestedManyWithoutResumeTemplatesInput";

@InputType()
class ResumeTemplateCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumResumeTemplateIndustry,
    isArray: true,
  })
  @IsEnum(EnumResumeTemplateIndustry, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumResumeTemplateIndustry], {
    nullable: true,
  })
  industry?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumResumeTemplateProfession,
    isArray: true,
  })
  @IsEnum(EnumResumeTemplateProfession, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumResumeTemplateProfession], {
    nullable: true,
  })
  profession?: Array<"Option1">;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  fileWord?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  filePdf?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  freeDownload?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutResumeTemplatesInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutResumeTemplatesInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutResumeTemplatesInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutResumeTemplatesInput;

  @ApiProperty({
    required: false,
    type: () => LikeCreateNestedManyWithoutResumeTemplatesInput,
  })
  @ValidateNested()
  @Type(() => LikeCreateNestedManyWithoutResumeTemplatesInput)
  @IsOptional()
  @Field(() => LikeCreateNestedManyWithoutResumeTemplatesInput, {
    nullable: true,
  })
  likes?: LikeCreateNestedManyWithoutResumeTemplatesInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseHistoryCreateNestedManyWithoutResumeTemplatesInput,
  })
  @ValidateNested()
  @Type(() => PurchaseHistoryCreateNestedManyWithoutResumeTemplatesInput)
  @IsOptional()
  @Field(() => PurchaseHistoryCreateNestedManyWithoutResumeTemplatesInput, {
    nullable: true,
  })
  purchaseHistories?: PurchaseHistoryCreateNestedManyWithoutResumeTemplatesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  author?: string | null;
}

export { ResumeTemplateCreateInput as ResumeTemplateCreateInput };
